{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.jsx\";\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\nexport default function NewMeetup() {\n  var handleNewMeetup = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(meetupData) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/new-meetup\", {\n                method: \"POST\",\n                body: JSON.stringify(meetupData),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNewMeetup(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: handleNewMeetup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n_c = NewMeetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetup\");","map":{"version":3,"sources":["/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.jsx"],"names":["NewMeetupForm","NewMeetup","handleNewMeetup","meetupData","fetch","method","body","JSON","stringify","headers","response"],"mappings":";;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAMC,eAAe;AAAA,wEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAECC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,UAAf,CAFwC;AAG9CM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAHqC,eAApB,CAFN;;AAAA;AAEhBC,cAAAA,QAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfR,eAAe;AAAA;AAAA;AAAA,KAArB;;AAYA,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAduBD,S","sourcesContent":["import NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nexport default function NewMeetup() {\n  const handleNewMeetup = async (meetupData) => {\n    // console.log(meetupData);\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(meetupData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    // response.json().then((r) => console.log(r));\n  };\n\n  return <NewMeetupForm onAddMeetup={handleNewMeetup} />;\n}\n"]},"metadata":{},"sourceType":"module"}