{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/index.jsx\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/Head\";\nexport default function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetups List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Meta, {\n        name: \"description\",\n        content: \"Create and view a list of highly Reactive meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://hajra:abcd1234@cluster0.lnmb9at.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  let meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(m => ({\n        id: m._id.toString(),\n        title: m.title,\n        image: m.image,\n        address: m.address\n      }))\n    },\n    revalidate: 3600\n  };\n}","map":{"version":3,"sources":["/Users/hajra/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/index.jsx"],"names":["MeetupList","MongoClient","Head","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","m","id","_id","toString","title","image","address","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,+FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,MAAIN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAApB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,CAAD,KAAQ;AAC3BC,QAAAA,EAAE,EAAED,CAAC,CAACE,GAAF,CAAMC,QAAN,EADuB;AAE3BC,QAAAA,KAAK,EAAEJ,CAAC,CAACI,KAFkB;AAG3BC,QAAAA,KAAK,EAAEL,CAAC,CAACK,KAHkB;AAI3BC,QAAAA,OAAO,EAAEN,CAAC,CAACM;AAJgB,OAAR,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/Head\";\n\nexport default function HomePage(props) {\n  return (\n    <>\n      <Head>\n        <title>Meetups List</title>\n        <Meta\n          name=\"description\"\n          content=\"Create and view a list of highly Reactive meetups!\"\n        ></Meta>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://hajra:abcd1234@cluster0.lnmb9at.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  let meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((m) => ({\n        id: m._id.toString(),\n        title: m.title,\n        image: m.image,\n        address: m.address,\n      })),\n    },\n    revalidate: 3600,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}